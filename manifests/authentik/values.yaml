---
global:
  env:
    - name: AUTHENTIK_POSTGRESQL__PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgresql-app
          key: password
authentik:
  secret_key: ${secretkey}
  email:
    host: ${emailhost}
    username: ${emailusername}
    password: ${emailpassword}
    use_tls: true
    from: ${emailfrom}
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  postgresql:
    host: postgresql-rw.authentik.svc.cluster.local
  redis:
    host: valkey.authentik.svc.cluster.local
server:
  nodeSelector:
    kubernetes.io/hostname: ${nodename}
  deploymentStrategy:
    type: Recreate
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt
    hosts:
      - ${hostname}
    tls:
      - secretName: authentik-tls
        hosts:
          - ${hostname}
  volumes:
    - name: media
      persistentVolumeClaim:
        claimName: authentik-media
  volumeMounts:
    - name: media
      mountPath: /media
prometheus:
  rules:
    enabled: true
