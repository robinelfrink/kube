---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: flux
data:
  values.yaml: |
    nameOverride: prometheus
    defaultRules:
      create: true
      rules:
        etcd: false
        k8sContainerCpuUsageSecondsTotal: false
        k8sContainerMemoryCache: false
        k8sContainerMemoryRss: false
        k8sContainerMemorySwap: false
        kubeApiserverBurnrate: false
        kubeApiserverHistogram: false
        kubeApiserverSlos: false
        kubeProxy: false
        kubePrometheusNodeRecording: false
        kubeSchedulerRecording: false
        kubernetesResources: false
        nodeExporterRecording: false
        windows: false
    alertmanager:
      config:
        global:
          smtp_hello: ${alermanagersmtphello}
          smtp_from: ${alertmanagersmtpfrom}
          smtp_smarthost: ${alertmanagersmtpsmarthost}
          smtp_auth_username: ${alertmanagersmtpusername}
          smtp_auth_password: ${alertmanagersmtppassword}
          smtp_require_tls: true
        route:
          receiver: admin
          routes:
            - match:
                alertname: Watchdog
              receiver: "null"
        receivers:
          - name: "null"
          - name: admin
            email_configs:
              - to: ${adminemail}
                send_resolved: true
    grafana:
      adminPassword: ${adminpassword}
      defaultDashboardsEditable: false
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - ${grafanahostname}
        tls:
          - secretName: grafana-tls
            hosts:
              - ${grafanahostname}
      persistence:
        enabled: true
        storageClassName: hdd
        annotations:
          helm.sh/resource-policy: keep
          volume.kubernetes.io/selected-node: ${nodename}
      grafana.ini:
        server:
          root_url: ${grafanarooturl}
        auth:
          disable_login_form: true
          disable_signout_menu: false
        auth.generic_oauth:
          name: Single Sign On
          icon: signin
          enabled: true
          client_id: ${grafanaclientid}
          client_secret: ${grafanaclientsecret}
          scopes: openid profile email
          empty_scopes: false
          auth_url: ${grafanaauthurl}
          signout_redirect_url: ${grafanasignoutredirecturl}
          token_url: ${grafanatokenurl}
          api_url: ${grafanaapiurl}
          allow_sign_up: true
          use_pkce: true
          role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
      assertNoLeakedSecrets: false
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeScheduler:
      service:
        selector:
          k8s-app: kube-scheduler
    kubeProxy:
      enabled: false
    nodeExporter:
      operatingSystems:
        aix:
          enabled: false
        darwin:
          enabled: false
    prometheus-node-exporter:
      extraArgs:
        - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        - --collector.filesystem.fs-types-exclude=^(efivars|autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
    prometheus:
      prometheusSpec:
        nodeSelector:
          kubernetes.io/hostname: ${nodename}
        retention: 10d
        storageSpec:
          disableMountSubPath: true
          volumeClaimTemplate:
            metadata:
              annotations:
                kustomize.toolkit.fluxcd.io/prune: disabled
                volume.kubernetes.io/selected-node: ${nodename}
            spec:
              storageClassName: hdd
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 20Gi
        scrapeInterval: 60s
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        additionalScrapeConfigs:
          - job_name: 'kubernetes-service-endpoints'
            honor_labels: true
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
                action: drop
                regex: true
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                action: replace
                target_label: __scheme__
                regex: (https?)
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node
    cleanPrometheusOperatorObjectNames: true
    kube-state-metrics:
      rbac:
        extraRules:
          - apiGroups:
              - source.toolkit.fluxcd.io
              - kustomize.toolkit.fluxcd.io
              - helm.toolkit.fluxcd.io
            resources:
              - gitrepositories
              - kustomizations
              - helmreleases
            verbs: [ "list", "watch" ]
      customResourceState:
        enabled: true
        config:
          spec:
            resources:
              - groupVersionKind:
                  group: kustomize.toolkit.fluxcd.io
                  version: v1
                  kind: Kustomization
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Kustomization resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, lastAppliedRevision ]
                      source_name: [ spec, sourceRef, name ]
              - groupVersionKind:
                  group: helm.toolkit.fluxcd.io
                  version: v2
                  kind: HelmRelease
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux HelmRelease resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, history, "0", chartVersion ]
                      chart_name: [ status, history, "0", chartName ]
                      chart_app_version: [ status, history, "0", appVersion ]
                      chart_ref_name: [ spec, chartRef, name ]
                      chart_source_name: [ spec, chart, spec, sourceRef, name ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: GitRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux GitRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      url: [ spec, url ]
