# Make sure our directory structure exists
mkdir -p "$(pwd)/.direnv/etc" "$(pwd)/.direnv/bin"

# Set path and environment variables
PATH_add "$(pwd)/.direnv/bin"
PATH_add "$(pwd)/bin"
export KUBECONFIG="$(pwd)/.direnv/etc/kubeconfig"
export TALOSCONFIG="$(pwd)/.direnv/etc/talosconfig"

# Configure git hooks
git config --local core.hooksPath "$(pwd)/.githooks"

# Versions of tools to download
FLUX_VERSION=2.2.0
HELM_VERSION=v3.13.1
KUBECTL_VERSION=v1.28.3
KTAIL_VERSION=1.4.0
SOPS_VERSION=3.8.1
TALOSCTL_VERSION=v1.5.4

# Make sure kubeconfig exists
if [ ! -f ${KUBECONFIG} ]; then
    touch ${KUBECONFIG}
    chmod 0600 ${KUBECONFIG}
fi

# Make sure talosconfig exists
if [ ! -f ${TALOSCONFIG} ]; then
    touch ${TALOSCONFIG}
    chmod 0600 ${TALOSCONFIG}
fi

# Download tools

## flux
if [ ! -x "$(pwd)/.direnv/bin/flux" ] || [ "$($(pwd)/.direnv/bin/flux --version)" != "flux version ${FLUX_VERSION}" ]; then
    echo -n "Downloading flux ${FLUX_VERSION}..."
    curl --silent --location https://github.com/fluxcd/flux2/releases/download/v${FLUX_VERSION}/flux_${FLUX_VERSION}_linux_amd64.tar.gz | tar xzf - -C "$(pwd)/.direnv/bin/" flux
    chmod 0755 "$(pwd)/.direnv/bin/flux"
    echo " done."
fi

## helm
if [ ! -x "$(pwd)/.direnv/bin/helm" ] || [ "$($(pwd)/.direnv/bin/helm version --short --template '{{.Version}}' 2>/dev/null)" != "${HELM_VERSION}" ]; then
    echo -n "Downloading helm ${HELM_VERSION}..."
    curl --silent --location https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar xzf - --strip-components=1 -C "$(pwd)/.direnv/bin/" linux-amd64/helm
    chmod 0755 "$(pwd)/.direnv/bin/helm"
    echo " done."
fi

## kubectl
if [ ! -x "$(pwd)/.direnv/bin/kubectl" ] || [ "$($(pwd)/.direnv/bin/kubectl version --client --output=yaml | grep 'gitVersion:' 2>/dev/null)" != "  gitVersion: ${KUBECTL_VERSION}" ]; then
    echo -n "Downloading kubectl ${KUBECTL_VERSION}..."
    curl --silent --location --output "$(pwd)/.direnv/bin/kubectl" https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
    chmod 0755 "$(pwd)/.direnv/bin/kubectl"
    echo " done."
fi

## ktail
if [ ! -x "$(pwd)/.direnv/bin/ktail" ]|| [ "$($(pwd)/.direnv/bin/ktail --version)" != "ktail ${KTAIL_VERSION}" ]; then
    echo -n "Downloading ktail v${KTAIL_VERSION}..."
    curl --silent --location --output "$(pwd)/.direnv/bin/ktail" https://github.com/atombender/ktail/releases/download/v${KTAIL_VERSION}/ktail-linux-amd64
    chmod 0755 "$(pwd)/.direnv/bin/ktail"
    echo " done."
fi

## sops
if [ ! -x "$(pwd)/.direnv/bin/sops" ] || [ "$($(pwd)/.direnv/bin/sops --version | sed 's/ (.*//' | head -1)" != "sops ${SOPS_VERSION}" ]; then
    echo -n "Downloading sops ${SOPS_VERSION}..."
    curl --silent --output "$(pwd)/.direnv/bin/sops" --location https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64
    chmod 0755 "$(pwd)/.direnv/bin/sops"
    echo " done."
fi

## talosctl
if [ ! -x "$(pwd)/.direnv/bin/talosctl" ] || [ -z "$($(pwd)/.direnv/bin/talosctl version --client --short | grep "${TALOSCTL_VERSION}\$")" ]; then
    echo -n "Downloading talosctl ${TALOSCTL_VERSION}..."
    curl --silent --location --output "$(pwd)/.direnv/bin/talosctl" https://github.com/siderolabs/talos/releases/download/${TALOSCTL_VERSION}/talosctl-linux-amd64
    chmod 0755 "$(pwd)/.direnv/bin/talosctl"
    echo " done."
fi
